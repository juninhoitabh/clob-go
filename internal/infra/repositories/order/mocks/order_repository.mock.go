// Code generated by MockGen. DO NOT EDIT.
// Source: /clob_go/internal/domain/order/repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	order "github.com/juninhoitabh/clob-go/internal/domain/order"
)

// MockIOrderRepository is a mock of IOrderRepository interface.
type MockIOrderRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIOrderRepositoryMockRecorder
}

// MockIOrderRepositoryMockRecorder is the mock recorder for MockIOrderRepository.
type MockIOrderRepositoryMockRecorder struct {
	mock *MockIOrderRepository
}

// NewMockIOrderRepository creates a new mock instance.
func NewMockIOrderRepository(ctrl *gomock.Controller) *MockIOrderRepository {
	mock := &MockIOrderRepository{ctrl: ctrl}
	mock.recorder = &MockIOrderRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIOrderRepository) EXPECT() *MockIOrderRepositoryMockRecorder {
	return m.recorder
}

// GetOrder mocks base method.
func (m *MockIOrderRepository) GetOrder(orderID string) (*order.Order, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrder", orderID)
	ret0, _ := ret[0].(*order.Order)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrder indicates an expected call of GetOrder.
func (mr *MockIOrderRepositoryMockRecorder) GetOrder(orderID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrder", reflect.TypeOf((*MockIOrderRepository)(nil).GetOrder), orderID)
}

// RemoveOrder mocks base method.
func (m *MockIOrderRepository) RemoveOrder(orderID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveOrder", orderID)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveOrder indicates an expected call of RemoveOrder.
func (mr *MockIOrderRepositoryMockRecorder) RemoveOrder(orderID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveOrder", reflect.TypeOf((*MockIOrderRepository)(nil).RemoveOrder), orderID)
}

// SaveOrder mocks base method.
func (m *MockIOrderRepository) SaveOrder(o *order.Order) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveOrder", o)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveOrder indicates an expected call of SaveOrder.
func (mr *MockIOrderRepositoryMockRecorder) SaveOrder(o interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveOrder", reflect.TypeOf((*MockIOrderRepository)(nil).SaveOrder), o)
}
